generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model books {
  id             Int        @id @default(autoincrement())
  category_id    Int
  title          String     @unique
  status         String
  condition      String
  rating         Int?
  description    String?
  published_date String?
  price          Float
  isbn           Int?       @unique
  owner_id       Int
  created_at     DateTime   @default(now())
  updated_at     DateTime   @default(now())
  cover_url      String
  language_id    Int
  author_id      Int?
  type           String?    @default("rent")
  authors        authors?   @relation(fields: [author_id], references: [id])
  categories     categories @relation(fields: [category_id], references: [id])
  languages      languages  @relation(fields: [language_id], references: [id])
  users          users      @relation(fields: [owner_id], references: [id])
  orders         orders[]
}

model categories {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  books      books[]
}

model checkouts {
  id            Int       @id @default(autoincrement())
  owner_id      Int
  checkout_date DateTime?
  return_date   DateTime?
  total_price   Float
  order_id      Int?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @default(now())
  note          String?
  status        String    @default("open")
  orders        orders?   @relation(fields: [order_id], references: [id])
  users         users     @relation(fields: [owner_id], references: [id])
}

model orders {
  user_id    Int
  book_id    Int
  order_date DateTime    @default(now())
  id         Int         @unique @default(autoincrement())
  updated_at DateTime    @default(now())
  created_at DateTime    @default(now())
  status     String      @default("active")
  books      books       @relation(fields: [book_id], references: [id])
  users      users       @relation(fields: [user_id], references: [id])
  checkouts  checkouts[]

  @@id([user_id, book_id])
}

model users {
  id           Int         @id @default(autoincrement())
  name         String      @unique
  password     String
  email        String      @unique
  is_admin     Boolean     @default(false)
  last_sign_in DateTime    @default(now())
  phone        String?
  created_at   DateTime    @default(now())
  updated_at   DateTime    @default(now())
  books        books[]
  checkouts    checkouts[]
  orders       orders[]
}

model languages {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  books      books[]
}

model authors {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  books      books[]
}
